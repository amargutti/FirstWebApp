// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace FirstWebApp.Models.EF_Models;

public partial class FirstWebAppDBContext : DbContext
{
    public FirstWebAppDBContext(DbContextOptions<FirstWebAppDBContext> options)
        : base(options)
    {
    }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        if (!optionsBuilder.IsConfigured)
        {
            optionsBuilder.UseSqlServer("Data Source=(LocalDb)\\FirstWebApp;Database=FirstWebAppDB;Trusted_Connection=True;");
        }
    }

    public virtual DbSet<Course> Courses { get; set; }

    public virtual DbSet<Lesson> Lessons { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Course>(entity =>
        {
            entity.ToTable("Courses");
            entity.HasKey(course => course.Id); //omettibile se la chiave è chiamata Id o CourseId
            /*
            come scrivere la chiave primaria se questa è composta da più campi
            entity.HasKey(course => new { course.Id, course.Title });
            */

            //Mapping for Owned Types
            entity.OwnsOne(course => course.CurrentPrice, builder =>
            {
                builder.Property(money => money.Currency).HasConversion<string>(); //converte da stringa ad Enum;
                builder.Property(money => money.Currency).HasColumnName("CurrentPrice_Currency"); //righe inutili perchè nel nostro caso hanno lo stesso nome
                builder.Property(money => money.Amount).HasColumnName("CurrentPrice_Amount");
            });
            //CurrentPrice_Amount -- CurrentPrice_Currency
            
            // Questo se le colonne e le proprietà hanno lo stesso nome 
            entity.OwnsOne(course => course.FullPrice, builder =>
            {
                builder.Property(money => money.Currency).HasConversion<string>(); //converte da stringa ad Enum;
            });

            //Mapping for Relations
            entity.HasMany(course => course.Lessons) //punto di vista dell'attuale entità
                  .WithOne(lesson => lesson.Course) //punto di vista entità dipendente
                  .HasForeignKey(lesson => lesson.CourseId); //superflua se la proprietà si chiama CourseId


            #region Auto Generated Mapping from EF Core Reverse Engineering
            /*
            entity.Property(e => e.Author)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CurrentPriceAmount)
                .HasAnnotation("Relational:DefaultConstraintName", "DF_Courses_CurrentPrice_Amount")
                .HasColumnType("numeric(18, 5)")
                .HasColumnName("CurrentPrice_Amount");
            entity.Property(e => e.CurrentPriceCurrency)
                .IsRequired()
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasDefaultValue("EUR")
                .HasAnnotation("Relational:DefaultConstraintName", "DF_Courses_CurrentPrice_Currency")
                .HasColumnName("CurrentPrice_Currency");
            entity.Property(e => e.Description)
                .HasMaxLength(4000)
                .IsUnicode(false);
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FullPriceAmount)
                .HasAnnotation("Relational:DefaultConstraintName", "DF_Courses_FullPrice_Amount")
                .HasColumnType("numeric(18, 5)")
                .HasColumnName("FullPrice_Amount");
            entity.Property(e => e.FullPriceCurrency)
                .IsRequired()
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasDefaultValue("EUR")
                .HasAnnotation("Relational:DefaultConstraintName", "DF_Courses_FullPrice_Currency")
                .HasColumnName("FullPrice_Currency");
            entity.Property(e => e.ImagePath)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Rating).HasAnnotation("Relational:DefaultConstraintName", "DF_Courses_Rating");
            entity.Property(e => e.Title)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            */
            #endregion
        });

        modelBuilder.Entity<Lesson>(entity =>
        {
            //implementazione dal punto di vista dell'entità dipendente
            entity.HasOne(lesson => lesson.Course)
                  .WithMany(course => course.Lessons);
            #region Auto Generated Mapping from EF Core Reverse Engineering
            /*
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.Duration)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasDefaultValue("00:00:00")
                .HasAnnotation("Relational:DefaultConstraintName", "DF_Lesson_Duration");
            entity.Property(e => e.Title)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.Course).WithMany(p => p.Lessons)
                .HasForeignKey(d => d.CourseId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Lessons_Courses");
            */
            #endregion
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}